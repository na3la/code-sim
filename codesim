#! /usr/bin/python

import os
import time
from math import factorial
from itertools import combinations_with_replacement
import pandas as pd
from sklearn import preprocessing

import lib.distance_metrics as dm
from gst.new_kr import take_text_pattern
from tc.dict_builder_update import dict_builder
from visualize import create_dendrograms


def main():

    token_dict = dict_builder()
    fileuuids = combinations_with_replacement(token_dict.keys(), 2)

    dat = pd.DataFrame(index=sorted(token_dict.keys()),
                       columns=sorted(token_dict.keys()))
    dat2 = pd.DataFrame(index=sorted(token_dict.keys()),
                        columns=sorted(token_dict.keys()))

    t = (factorial(len(token_dict.keys()) + 2 -
                   1)) // (2 * factorial(len(token_dict.keys()) - 1))

    print("Starting check. This may take a while.")

    for c, pair in enumerate(fileuuids):

        print(f"{c}/{t}")
        x, y = pair
        length_tiled_tokens = take_text_pattern(token_dict.get(x),
                                                token_dict.get(y), 1)

        dat[x][y] = dm.ltt_ldd(length_tiled_tokens, len(token_dict.get(x)),
                               len(token_dict.get(y)))
        dat[y][x] = dat[x][y]

        dat2[x][y] = dm.avg_ltt(length_tiled_tokens, len(token_dict.get(x)),
                                len(token_dict.get(y)))
        dat2[y][x] = dat2[x][y]

    # scale dm.avg_ltt w/ min-max
    min_max_scaler = preprocessing.MinMaxScaler(feature_range=(0, 1),
                                                copy=False)

    min_max_scaler.fit_transform(dat2)

    # create directory for CSVs if not already exist

    t = time.localtime()
    dir_name = "".join([
        str(t.tm_year), "_",
        str(t.tm_mon), "_",
        str(t.tm_mday), "_",
        str(t.tm_min), "_",
        str(t.tm_sec)
    ])

    if not os.path.isdir(dir_name):

        try:
            os.mkdir(dir_name)
            print(f"Created {dir_name} for output files")

        except Exception as e:
            print(e)

    dat_fname = os.path.join(dir_name, "ltt_ldd" + "." + "csv")
    dat.to_csv(dat_fname, sep=",", index=False)
    create_dendrograms.plot(dat, dat_fname, title="ltt_ldd")

    dat2_fname = os.path.join(dir_name, "avg_ldd" + "." + "csv")
    dat2.to_csv(dat2_fname, sep=",", index=False)
    create_dendrograms.plot(dat2, dat2_fname, title="avg_ldd")


if __name__ == '__main__':
    main()
