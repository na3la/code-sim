RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X . get ( i ) X X return X ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
{ for ( X k X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X k = X X X X X X X X X X k X X X X X X X get X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X k X X X k X tuples X X X X X k X ) X X X tuples X X X X X X X X X X equals X ID X ) X X X X get X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X k X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X get X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X k = X X X X X X X X X X k X X X X X X X get X k X X X X X X X X X X X X X tuples X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X X X ; X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X k X X X X X X X RAW STRINGS 
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
{ for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
{ for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X tuple X X X X X X X X X X X X equals X ID ) X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X tuple X tuples X X X X X X X X X X X X X ) X X X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X tuples X X X X X X getID X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X tuple X X X X X equals X X X X X return X ; RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X tuple X X X X X X X X X X X X equals X ID ) X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X ID X X X X X ; RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X InstTuple X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X X X X X X X X X X tuple . getID ( ) X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( ID X X X X X X X X X X ( X X X X X X X X tuple X X X X X X X X ) X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X ) X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X X tuple X tuples ) X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
{ for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X i = X X X X X X X X X X i X X X X X X X get X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X i X X X i X tuples X X X X X i X ) X X X tuples X X X X X X X X X X equals X ID X ) X X X X get X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X i X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X get X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuples . size ( ) X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X i = X X X X X X X X X X i X X X X X X X get X i X X X X X X X X X X X X X tuples X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X X X ; X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X i X X X X X X X RAW STRINGS 
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X tuples X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X . get ( i ) X X return X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X display = X X X X X X X X X X InstTuple X X X X X X X tuple X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X display X X X X X X X X X X X X tuple X tuples ) X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X display = X X X X X X X X X X InstTuple X X X X X X X tuple X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X display X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X InstTuple X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X display X X ArrayList X X X ( X X X RAW STRINGS 
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X tuples X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X X X tuple X X X return X ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X X X tuples X iterator X X X X X hasNext X ) X X X InstTuple X X X X X X X X X X j X getID X ) X X X X j X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X k X X X X X X X X X X X X X ) X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X X X X X X X X X X k . next ( ) X X ( RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X X X tuples X iterator X X X X X hasNext X ) X X X InstTuple X X X X X X X X X X j X getID X ) X X X X j X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X k X tuples X X X X X X X X X X X X X X X X k X X X X X X X X X X X X X X ) X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( Iterator X InstTuple X X X X X X ( X X k X X X X X X X X X X RAW STRINGS 
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X iterator X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X equals X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tup . getID ( ) X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tup . getID ( ) X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X equals X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tup X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X equals X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tup : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tup X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X X X X X X X X tup X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tup X tuples ) X if ( tup X X X X X equals X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X result X X ( RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X tuples X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X tuple X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X tuple X X X X X X tuple X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X result X X ( InstTuple X X X X X X X X X X ( X X X X X X X X result X X X X X X X X ) X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X tuples X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X tuple X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X result X X ( RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X InstTuple X X X X X X X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X tuple X tuples X X X X X X X X X X X X X X X X result X X X X X X X X X X X X X X ) X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X result X X ( RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X InstTuple X X X X X X ( X . getID ( X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X result X X ( RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X ) X tuple . getName RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X result X X ( InstTuple X X X X X X X X X X X X X equals X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X InstTuple X X X X X X X X X X X X X X X X ) X X RAW STRINGS 
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X result X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X . get ( i ) X X return X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X getID X X X X X ID X X X X X return X ; RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X ( RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X tuples X X X X X X ( X . equals ( X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X tuple X X X ; RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X X X X X X ) X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X index X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { X X X get X index RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X index X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X X X index X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X index X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X index X X ( RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index X 0 RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X . get ( index RAW STRINGS 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X X ) X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X ) RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X tuples . size ( ) X i X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X i X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X ) X X X X X X X tuples X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X i X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X i X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X tuple X X X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X equals X X X ) RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( InstTuple X X tuples X X X X X X getID X X X X X RAW STRINGS 
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X tuple X tuples ) X if ( tuple X X X X X equals X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X result = X X X X X X X X X X InstTuple X X X X X X X tuple X getID X X X X X X X X X X X X X tuple X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X result X X X X X X X X X X X X tuple X tuples ) X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X ) X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X result = X X X X X X X X X X InstTuple X X X X X X X tuple X getID X X X X X X X X X X X X X tuple X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X result X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X ) X result . add RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X InstTuple X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X InstTuple X result X X ArrayList X X X ( X X X RAW STRINGS 
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X tuples X X X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( ID X X X X X X X X X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X get X X X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X ) X X X X X X X get X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X . equals ( ID ) X X return X ; RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X X equals X ID ) X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X InstTuple X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X . equals ( ID ) X X return X ; RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X table X InstTuple X X tuples X X X ( X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X X X ID X X X return X ; RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X InstTuple X X X X X X ( X X getID X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X X X X X X ) X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X . equals ( ID ) X X return X ; RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X . equals ( ID RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( X X X X X tuples X X X X X X X X X X X X X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
for ( table X X instuple X X X X X X instuple X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X table X InstTuple X X tuples X X X ( X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
X X X X X RAW STRINGS 
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X instuple X X X X X X X X X X X . equals ( ID ) X X return X ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X X X X X X X X X ) X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
{ for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X ; X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X X X X X X i X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X i X X ( RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X X X X X X ) X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
throw new UnsupportedOperationException ( ) ; }
THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
 MATCHING 
RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X keyIndex X ID ) X if ( i X X X X X tuples X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
 MATCHING 
X X X X X X X X X X X X X X X X RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
 MATCHING 
int i = keyIndex ( ID ) ; if ( i X 0 RAW STRINGS 
int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
 MATCHING 
X X X X X ID X X X X X X X X X X X . get ( i ) X X return X ; 