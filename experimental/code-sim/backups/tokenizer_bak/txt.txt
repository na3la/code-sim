
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X X X X ( k X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X k X ) X X ( tuples X X X k X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X tuples . size ( ) X k X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X k X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X X X tuple . getID ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X ( X X X X X X X X tuple X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X tuples X X X X X X getID X X X X X X X X X return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X display X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X display X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X X ID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X X X k . next ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X k X tuples X X X X X X X X X X X X X X X X k X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X InstTuple X k X X X X X X X k . hasNext ( ) X X X InstTuple X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tup X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X X X X X X tup X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X ( X X X X X X X X result X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X tuple X tuples X X X X X X X X X X X X X X X X result X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X ( X . getID ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X ) X tuple . getName 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X ( X . equals ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X tuple X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X tuple X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { X X X get X index 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X X X index X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X index X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X index X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X index X X X X { return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X result X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X ) X result . add 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X result X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X get X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X instuple X X X X X X X X X return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X InstTuple X X X X X X X instuple . getID ( ) X X X ID X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X tuples X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X equals X X X X { return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X X X X ( k X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X k X ) X X ( tuples X X X k X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X tuples . size ( ) X k X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X k X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X X X tuple . getID ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X ( X X X X X X X X tuple X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X tuples X X X X X X getID X X X X X X X X X return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X display X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X display X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X X ID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X X X k . next ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X k X tuples X X X X X X X X X X X X X X X X k X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X InstTuple X k X X X X X X X k . hasNext ( ) X X X InstTuple X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tup X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X X X X X X tup X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X ( X X X X X X X X result X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X tuple X tuples X X X X X X X X X X X X X X X X result X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X ( X . getID ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X ) X tuple . getName 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X ( X . equals ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X tuple X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X tuple X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { X X X get X index 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X X X index X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X index X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X index X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X index X X X X { return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X result X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X ) X result . add 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X result X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X get X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X instuple X X X X X X X X X return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X InstTuple X X X X X X X instuple . getID ( ) X X X ID X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X tuples X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X equals X X X X { return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X X X X ( k X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X k X ) X X ( tuples X X X k X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X tuples . size ( ) X k X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X k X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X k < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X k X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X k X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X X X tuple . getID ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X ( X X X X X X X X tuple X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X X X X ( tuple X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X tuples X X X X X X getID X X X X X X X X X return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X tuple X tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X display X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X ID X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X display X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X X ID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X ID X X X tuple X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X X X k . next ( ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X return X ; } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X k X tuples X X X X X X X X X X X X X X X X k X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X j X k X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( Iterator X X X X X X X iterator X X X X . hasNext ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X Iterator X InstTuple X X X X X X ( ) ; X X hasNext X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X InstTuple X k X X X X X X X k . hasNext ( ) X X X InstTuple X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X iterator X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tup X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tup X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X X X X X X X X tup X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tup X tuples ) X if ( tup X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X ( X X X X X X X X result X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X tuple X tuples X X X X X X X X X X X X X X X X result X X X X X X X X X X X X X X ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X InstTuple X X X X X X ( X . getID ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X getID X ) X X ( ID X X X result X X InstTuple ( X . getID 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { InstTuple X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X tuple X getID X ) X tuple . getName 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( InstTuple X X X X X X X X X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X tuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X result X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X tuples X X X X X X ( X . equals ( X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X tuple . getID ( ) X equals X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X tuple X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X tuple X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { X X X get X index 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X X X index X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X index X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X index X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( index X X X X X tuples X get X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X index X X X X { return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X X X X ( i X X X X X X X X X ) X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X X X X X X X X X X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X X X X X X X X X X X X X X X X X X X X X get X i X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X ( X X i X ) X X ( tuples X X X i X X getID ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X tuples . size ( ) X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X i X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X i < tuples X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X ) X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X i X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X i X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple X X X X X X X tuple X X X X . equals ( X X ) { X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) X X X X X X X X X X X X ) X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X ID X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { for ( X tuple X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X equals X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X X X X X X X X tuple X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X ( X . equals 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X tuple X tuples ) X if ( tuple X X X X X equals X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X tuple X X X X X X X X X X X X X X X X ) X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { X X X X X X X X } 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X result X X X X X X ( ) ; X X InstTuple X X X ) { X X X X X X X X X X X X X X X X X X X X X X } return X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { List X X X X X X X X X X X X X X X X X X tuples X X X X X X X X X X equals X ID X ) X result . add 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X InstTuple X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X ArrayList < InstTuple X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X InstTuple X X X X X X X X X X X X X InstTuple X X X ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X result X X ArrayList X InstTuple X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( ID X X X X X X X X X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X get X X X ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X ) X X X X X X X get X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X X X X X X X X i X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X equals X X X X X X instuple X X X X X X X X X return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X InstTuple X X X X X X X instuple . getID ( ) X X X ID X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X InstTuple X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X tuples X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X equals X X X X { return X ; 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X instuple X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X ( X . getID 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X table X X instuple X tuples X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public table X X lookup X X X X X X X X X X X X X X X X X X X getID X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int k = 0 ; k < tuples . size ( ) ; k ++ ) { if ( tuples . get ( k ) . getID ( ) . equals ( ID ) ) { return tuples . get ( k ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { X X X get X i 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > display = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } else return null ; } return ( InstTuple ) display ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE RETURN NULL SEMI RBRACE RETURN LPAREN IDENTIFIER RPAREN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) == ID ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X X X i X X } return null ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( Iterator < InstTuple > k = tuples . iterator ( ) ; k . hasNext ( ) ; ) { InstTuple j = k . next ( ) ; if ( j . getID ( ) == ID ) return j ; } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI RPAREN LBRACE IDENTIFIER IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN EQEQ IDENTIFIER RPAREN RETURN IDENTIFIER SEMI RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X i X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tup : tuples ) { if ( tup . getID ( ) . equals ( ID ) ) { return tup ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { InstTuple result ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result = new InstTuple ( tuple . getID ( ) , tuple . getName ( ) , tuple . getDept_name ( ) , tuple . getSalary ( ) ) ; return result ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER IDENTIFIER SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER EQ NEW IDENTIFIER LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN COMMA IDENTIFIER DOT IDENTIFIER LPAREN RPAREN RPAREN SEMI RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X i X X ( 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) if ( tuple . getID ( ) . equals ( ID ) ) return tuple ; return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN RETURN IDENTIFIER SEMI RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X X X X X X ) X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { throw new UnsupportedOperationException ( ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE THROW NEW IDENTIFIER LPAREN RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int index = keyIndex ( ID ) ; if ( index >= 0 ) { return tuples . get ( index ) ; } else { return null ; } }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( int i = 0 ; i < tuples . size ( ) ; i ++ ) { if ( tuples . get ( i ) . getID ( ) . equals ( ID ) ) { return tuples . get ( i ) ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN INT IDENTIFIER EQ INTLITERAL SEMI IDENTIFIER LT IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMI IDENTIFIER PLUSPLUS RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { return tuple ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X keyIndex X ID ) X if ( i X X X X X tuples X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { List < InstTuple > result = new ArrayList < InstTuple > ( ) ; for ( InstTuple tuple : tuples ) { if ( tuple . getID ( ) . equals ( ID ) ) { result . add ( tuple ) ; } } return result ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE IDENTIFIER LT IDENTIFIER GT IDENTIFIER EQ NEW IDENTIFIER LT IDENTIFIER GT LPAREN RPAREN SEMI FOR LPAREN IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RBRACE RETURN IDENTIFIER SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { X X X X X X X X X X X X X X X X 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i < 0 ) return null ; else return tuples . get ( i ) ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER LT INTLITERAL RPAREN RETURN NULL SEMI ELSE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE

 MATCHING 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i X 0 
 RAW STRINGS 
public InstTuple lookup ( String ID ) { int i = keyIndex ( ID ) ; if ( i >= 0 ) { return tuples . get ( i ) ; } return null ; }
public table . InstTuple lookup ( String ID ) { for ( table . InstTuple instuple : tuples ) { if ( instuple . getID ( ) . equals ( ID ) ) { return instuple ; } else { return null ; } } return null ; }
PUBLIC IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE INT IDENTIFIER EQ IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI IF LPAREN IDENTIFIER GTEQ INTLITERAL RPAREN LBRACE RETURN IDENTIFIER DOT IDENTIFIER LPAREN IDENTIFIER RPAREN SEMI RBRACE RETURN NULL SEMI RBRACE
PUBLIC IDENTIFIER DOT IDENTIFIER IDENTIFIER LPAREN IDENTIFIER IDENTIFIER RPAREN LBRACE FOR LPAREN IDENTIFIER DOT IDENTIFIER IDENTIFIER COLON IDENTIFIER RPAREN LBRACE IF LPAREN IDENTIFIER DOT IDENTIFIER LPAREN RPAREN DOT IDENTIFIER LPAREN IDENTIFIER RPAREN RPAREN LBRACE RETURN IDENTIFIER SEMI RBRACE ELSE LBRACE RETURN NULL SEMI RBRACE RBRACE RETURN NULL SEMI RBRACE

 MATCHING 
public InstTuple X X String X X X X X X X X X X X X X X X X X X X tuples X X X 